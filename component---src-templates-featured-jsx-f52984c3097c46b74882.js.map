{"version":3,"sources":["webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/featured.jsx"],"names":["PostListing","getPostList","postList","this","props","postEdges","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","image","feature","childImageSharp","fluid","title","date","src","render","className","map","post","to","key","style","background","React","Component","FeatureTemplate","edges","data","allMarkdownRemark","config","siteTitle"],"mappings":"oKAMMA,G,oHAEJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAVAC,KAAKC,MAAMC,UAAUC,SAAQ,SAAAC,GAC3BL,EAASM,KAAK,CACZC,KAAMF,EAASE,MAAQF,EAASG,KAAKC,OAAOC,KAC5CC,KAAMN,EAASM,MAAQN,EAASG,KAAKI,YAAYD,KACjDE,MAAOR,EAASQ,OAASR,EAASG,KAAKI,YAAYE,MAAMC,QAAQC,gBAAgBC,MACjFC,MAAOb,EAASa,OAASb,EAASG,KAAKI,YAAYM,MACnDC,KAAMd,EAASc,MAAQd,EAASG,KAAKC,OAAOU,KAC5CC,IAAKf,EAASe,SAGXpB,G,EAGTqB,OAAA,WACE,IAAMrB,EAAWC,KAAKF,cAGtB,OACE,yBAAKuB,UAAU,iBACZtB,EAASuB,KAAI,SAAAC,GAAI,OAChB,kBAAC,OAAD,CAAMC,GAAID,EAAKjB,KAAMmB,IAAKF,EAAKN,OAC7B,yBAAKI,UAAU,WACXE,EAAKJ,IACJ,yBAAKE,UAAU,YAAYK,MAAO,CAACC,WAAW,OAAQJ,EAAKJ,IAAd,qBAE7C,kBAAC,IAAD,CAAKH,MAAOO,EAAKX,MAAOS,UAAU,cAErC,4BAAKE,EAAKN,c,GAhCEW,IAAMC,YAyCjBhC,O,+MCxCMiC,E,kGACnBV,OAAA,WACE,IAAkCW,EAAW/B,KAAKC,MAA3C+B,KAAOC,kBAAoBF,MAClC,OACE,kBAAC,IAAD,KACE,yBAAKV,UAAU,iBACb,kBAAC,IAAD,CAAQJ,MAAK,oBAAsBiB,IAAOC,YAC1C,kBAAC,IAAD,CAAajC,UAAW6B,O,GAPWH,IAAMC","file":"component---src-templates-featured-jsx-f52984c3097c46b74882.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from 'gatsby-image';\nimport \"./PostListing.css\";\n\n\nclass PostListing extends React.Component {\n\n  getPostList() {\n    const postList = [];\n    // eslint-disable-next-line\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.path || postEdge.node.fields.slug,\n        tags: postEdge.tags || postEdge.node.frontmatter.tags,\n        cover: postEdge.cover || postEdge.node.frontmatter.image.feature.childImageSharp.fluid,\n        title: postEdge.title || postEdge.node.frontmatter.title,\n        date: postEdge.date || postEdge.node.fields.date,\n        src: postEdge.src\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n\n\n    return (\n      <div className=\"postContainer\">\n        {postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <div className=\"postBox\">\n              { post.src ?\n                (<div className=\"postImage\" style={{background: `url(${post.src}) center center`}} />)\n                :\n                (<Img fluid={post.cover} className=\"postImage\" />)\n              }\n              <h2>{post.title}</h2>\n            </div>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class FeatureTemplate extends React.Component {\n  render() {\n    const {data: {allMarkdownRemark: {edges}}} = this.props;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Featured Posts | ${config.siteTitle}`} />\n          <PostListing postEdges={edges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query FeaturePage {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: {featured: {in: true}} }\n    ) {\n        totalCount\n        edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            image {\n              feature {\n                childImageSharp {\n                  fluid(traceSVG: {\n                    color: \"#5E6A68\"\n                  }) {\n                    ...GatsbyImageSharpFluid_tracedSVG\n                  }\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }`;"],"sourceRoot":""}